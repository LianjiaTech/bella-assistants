/*
 * This file is generated by jOOQ.
 */
package com.ke.assistant.db.generated.tables.pojos;


import com.ke.assistant.db.repo.Timed;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * assistant基础信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssistantDb implements Timed, Serializable {

    private static final long serialVersionUID = 1L;

    private String        id;
    private String        model;
    private String        object;
    private String        name;
    private String        description;
    private String        instructions;
    private Double        temperature;
    private Double        topP;
    private String        responseFormat;
    private String        user;
    private String        reasoningEffort;
    private Byte          profile;
    private String        owner;
    private String        metadata;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public AssistantDb() {}

    public AssistantDb(AssistantDb value) {
        this.id = value.id;
        this.model = value.model;
        this.object = value.object;
        this.name = value.name;
        this.description = value.description;
        this.instructions = value.instructions;
        this.temperature = value.temperature;
        this.topP = value.topP;
        this.responseFormat = value.responseFormat;
        this.user = value.user;
        this.reasoningEffort = value.reasoningEffort;
        this.profile = value.profile;
        this.owner = value.owner;
        this.metadata = value.metadata;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public AssistantDb(
        String        id,
        String        model,
        String        object,
        String        name,
        String        description,
        String        instructions,
        Double        temperature,
        Double        topP,
        String        responseFormat,
        String        user,
        String        reasoningEffort,
        Byte          profile,
        String        owner,
        String        metadata,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.id = id;
        this.model = model;
        this.object = object;
        this.name = name;
        this.description = description;
        this.instructions = instructions;
        this.temperature = temperature;
        this.topP = topP;
        this.responseFormat = responseFormat;
        this.user = user;
        this.reasoningEffort = reasoningEffort;
        this.profile = profile;
        this.owner = owner;
        this.metadata = metadata;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>assistant.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>assistant.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>assistant.model</code>. assistant使用模型
     */
    public String getModel() {
        return this.model;
    }

    /**
     * Setter for <code>assistant.model</code>. assistant使用模型
     */
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for <code>assistant.object</code>.
     */
    public String getObject() {
        return this.object;
    }

    /**
     * Setter for <code>assistant.object</code>.
     */
    public void setObject(String object) {
        this.object = object;
    }

    /**
     * Getter for <code>assistant.name</code>. assistant名称
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>assistant.name</code>. assistant名称
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>assistant.description</code>. assistant描述
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>assistant.description</code>. assistant描述
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>assistant.instructions</code>.
     */
    public String getInstructions() {
        return this.instructions;
    }

    /**
     * Setter for <code>assistant.instructions</code>.
     */
    public void setInstructions(String instructions) {
        this.instructions = instructions;
    }

    /**
     * Getter for <code>assistant.temperature</code>. temperature of the run
     */
    public Double getTemperature() {
        return this.temperature;
    }

    /**
     * Setter for <code>assistant.temperature</code>. temperature of the run
     */
    public void setTemperature(Double temperature) {
        this.temperature = temperature;
    }

    /**
     * Getter for <code>assistant.top_p</code>. top_p of the run
     */
    public Double getTopP() {
        return this.topP;
    }

    /**
     * Setter for <code>assistant.top_p</code>. top_p of the run
     */
    public void setTopP(Double topP) {
        this.topP = topP;
    }

    /**
     * Getter for <code>assistant.response_format</code>. 输出格式
     */
    public String getResponseFormat() {
        return this.responseFormat;
    }

    /**
     * Setter for <code>assistant.response_format</code>. 输出格式
     */
    public void setResponseFormat(String responseFormat) {
        this.responseFormat = responseFormat;
    }

    /**
     * Getter for <code>assistant.user</code>. user
     */
    public String getUser() {
        return this.user;
    }

    /**
     * Setter for <code>assistant.user</code>. user
     */
    public void setUser(String user) {
        this.user = user;
    }

    /**
     * Getter for <code>assistant.reasoning_effort</code>. 推理参数配置
     */
    public String getReasoningEffort() {
        return this.reasoningEffort;
    }

    /**
     * Setter for <code>assistant.reasoning_effort</code>. 推理参数配置
     */
    public void setReasoningEffort(String reasoningEffort) {
        this.reasoningEffort = reasoningEffort;
    }

    /**
     * Getter for <code>assistant.profile</code>.
     */
    public Byte getProfile() {
        return this.profile;
    }

    /**
     * Setter for <code>assistant.profile</code>.
     */
    public void setProfile(Byte profile) {
        this.profile = profile;
    }

    /**
     * Getter for <code>assistant.owner</code>. 创建人
     */
    public String getOwner() {
        return this.owner;
    }

    /**
     * Setter for <code>assistant.owner</code>. 创建人
     */
    public void setOwner(String owner) {
        this.owner = owner;
    }

    /**
     * Getter for <code>assistant.metadata</code>. 元信息
     */
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>assistant.metadata</code>. 元信息
     */
    public void setMetadata(String metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for <code>assistant.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>assistant.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>assistant.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>assistant.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AssistantDb (");

        sb.append(id);
        sb.append(", ").append(model);
        sb.append(", ").append(object);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(instructions);
        sb.append(", ").append(temperature);
        sb.append(", ").append(topP);
        sb.append(", ").append(responseFormat);
        sb.append(", ").append(user);
        sb.append(", ").append(reasoningEffort);
        sb.append(", ").append(profile);
        sb.append(", ").append(owner);
        sb.append(", ").append(metadata);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
