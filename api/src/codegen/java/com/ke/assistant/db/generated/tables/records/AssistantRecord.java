/*
 * This file is generated by jOOQ.
 */
package com.ke.assistant.db.generated.tables.records;


import com.ke.assistant.db.generated.tables.Assistant;
import com.ke.assistant.db.repo.Timed;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * assistant基础信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssistantRecord extends UpdatableRecordImpl<AssistantRecord> implements Timed, Record16<String, String, String, String, String, String, Double, Double, String, String, String, Byte, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>assistant.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>assistant.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>assistant.model</code>. assistant使用模型
     */
    public void setModel(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>assistant.model</code>. assistant使用模型
     */
    public String getModel() {
        return (String) get(1);
    }

    /**
     * Setter for <code>assistant.object</code>.
     */
    public void setObject(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>assistant.object</code>.
     */
    public String getObject() {
        return (String) get(2);
    }

    /**
     * Setter for <code>assistant.name</code>. assistant名称
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>assistant.name</code>. assistant名称
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>assistant.description</code>. assistant描述
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>assistant.description</code>. assistant描述
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>assistant.instructions</code>.
     */
    public void setInstructions(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>assistant.instructions</code>.
     */
    public String getInstructions() {
        return (String) get(5);
    }

    /**
     * Setter for <code>assistant.temperature</code>. temperature of the run
     */
    public void setTemperature(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>assistant.temperature</code>. temperature of the run
     */
    public Double getTemperature() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>assistant.top_p</code>. top_p of the run
     */
    public void setTopP(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>assistant.top_p</code>. top_p of the run
     */
    public Double getTopP() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>assistant.response_format</code>. 输出格式
     */
    public void setResponseFormat(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>assistant.response_format</code>. 输出格式
     */
    public String getResponseFormat() {
        return (String) get(8);
    }

    /**
     * Setter for <code>assistant.user</code>. user
     */
    public void setUser(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>assistant.user</code>. user
     */
    public String getUser() {
        return (String) get(9);
    }

    /**
     * Setter for <code>assistant.reasoning_effort</code>. 推理参数配置
     */
    public void setReasoningEffort(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>assistant.reasoning_effort</code>. 推理参数配置
     */
    public String getReasoningEffort() {
        return (String) get(10);
    }

    /**
     * Setter for <code>assistant.profile</code>.
     */
    public void setProfile(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>assistant.profile</code>.
     */
    public Byte getProfile() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>assistant.owner</code>. 创建人
     */
    public void setOwner(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>assistant.owner</code>. 创建人
     */
    public String getOwner() {
        return (String) get(12);
    }

    /**
     * Setter for <code>assistant.metadata</code>. 元信息
     */
    public void setMetadata(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>assistant.metadata</code>. 元信息
     */
    public String getMetadata() {
        return (String) get(13);
    }

    /**
     * Setter for <code>assistant.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>assistant.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>assistant.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>assistant.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<String, String, String, String, String, String, Double, Double, String, String, String, Byte, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<String, String, String, String, String, String, Double, Double, String, String, String, Byte, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Assistant.ASSISTANT.ID;
    }

    @Override
    public Field<String> field2() {
        return Assistant.ASSISTANT.MODEL;
    }

    @Override
    public Field<String> field3() {
        return Assistant.ASSISTANT.OBJECT;
    }

    @Override
    public Field<String> field4() {
        return Assistant.ASSISTANT.NAME;
    }

    @Override
    public Field<String> field5() {
        return Assistant.ASSISTANT.DESCRIPTION;
    }

    @Override
    public Field<String> field6() {
        return Assistant.ASSISTANT.INSTRUCTIONS;
    }

    @Override
    public Field<Double> field7() {
        return Assistant.ASSISTANT.TEMPERATURE;
    }

    @Override
    public Field<Double> field8() {
        return Assistant.ASSISTANT.TOP_P;
    }

    @Override
    public Field<String> field9() {
        return Assistant.ASSISTANT.RESPONSE_FORMAT;
    }

    @Override
    public Field<String> field10() {
        return Assistant.ASSISTANT.USER;
    }

    @Override
    public Field<String> field11() {
        return Assistant.ASSISTANT.REASONING_EFFORT;
    }

    @Override
    public Field<Byte> field12() {
        return Assistant.ASSISTANT.PROFILE;
    }

    @Override
    public Field<String> field13() {
        return Assistant.ASSISTANT.OWNER;
    }

    @Override
    public Field<String> field14() {
        return Assistant.ASSISTANT.METADATA;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return Assistant.ASSISTANT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return Assistant.ASSISTANT.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getModel();
    }

    @Override
    public String component3() {
        return getObject();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public String component6() {
        return getInstructions();
    }

    @Override
    public Double component7() {
        return getTemperature();
    }

    @Override
    public Double component8() {
        return getTopP();
    }

    @Override
    public String component9() {
        return getResponseFormat();
    }

    @Override
    public String component10() {
        return getUser();
    }

    @Override
    public String component11() {
        return getReasoningEffort();
    }

    @Override
    public Byte component12() {
        return getProfile();
    }

    @Override
    public String component13() {
        return getOwner();
    }

    @Override
    public String component14() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component15() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getModel();
    }

    @Override
    public String value3() {
        return getObject();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public String value6() {
        return getInstructions();
    }

    @Override
    public Double value7() {
        return getTemperature();
    }

    @Override
    public Double value8() {
        return getTopP();
    }

    @Override
    public String value9() {
        return getResponseFormat();
    }

    @Override
    public String value10() {
        return getUser();
    }

    @Override
    public String value11() {
        return getReasoningEffort();
    }

    @Override
    public Byte value12() {
        return getProfile();
    }

    @Override
    public String value13() {
        return getOwner();
    }

    @Override
    public String value14() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value15() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdatedAt();
    }

    @Override
    public AssistantRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AssistantRecord value2(String value) {
        setModel(value);
        return this;
    }

    @Override
    public AssistantRecord value3(String value) {
        setObject(value);
        return this;
    }

    @Override
    public AssistantRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public AssistantRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AssistantRecord value6(String value) {
        setInstructions(value);
        return this;
    }

    @Override
    public AssistantRecord value7(Double value) {
        setTemperature(value);
        return this;
    }

    @Override
    public AssistantRecord value8(Double value) {
        setTopP(value);
        return this;
    }

    @Override
    public AssistantRecord value9(String value) {
        setResponseFormat(value);
        return this;
    }

    @Override
    public AssistantRecord value10(String value) {
        setUser(value);
        return this;
    }

    @Override
    public AssistantRecord value11(String value) {
        setReasoningEffort(value);
        return this;
    }

    @Override
    public AssistantRecord value12(Byte value) {
        setProfile(value);
        return this;
    }

    @Override
    public AssistantRecord value13(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public AssistantRecord value14(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public AssistantRecord value15(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AssistantRecord value16(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AssistantRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Double value7, Double value8, String value9, String value10, String value11, Byte value12, String value13, String value14, LocalDateTime value15, LocalDateTime value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssistantRecord
     */
    public AssistantRecord() {
        super(Assistant.ASSISTANT);
    }

    /**
     * Create a detached, initialised AssistantRecord
     */
    public AssistantRecord(String id, String model, String object, String name, String description, String instructions, Double temperature, Double topP, String responseFormat, String user, String reasoningEffort, Byte profile, String owner, String metadata, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Assistant.ASSISTANT);

        setId(id);
        setModel(model);
        setObject(object);
        setName(name);
        setDescription(description);
        setInstructions(instructions);
        setTemperature(temperature);
        setTopP(topP);
        setResponseFormat(responseFormat);
        setUser(user);
        setReasoningEffort(reasoningEffort);
        setProfile(profile);
        setOwner(owner);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
