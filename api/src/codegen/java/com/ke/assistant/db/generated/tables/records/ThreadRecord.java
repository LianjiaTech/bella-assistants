/*
 * This file is generated by jOOQ.
 */
package com.ke.assistant.db.generated.tables.records;


import com.ke.assistant.db.generated.tables.Thread;
import com.ke.assistant.db.repo.Timed;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThreadRecord extends UpdatableRecordImpl<ThreadRecord> implements Timed, Record8<String, String, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>thread.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>thread.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>thread.object</code>.
     */
    public void setObject(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>thread.object</code>.
     */
    public String getObject() {
        return (String) get(1);
    }

    /**
     * Setter for <code>thread.owner</code>.
     */
    public void setOwner(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>thread.owner</code>.
     */
    public String getOwner() {
        return (String) get(2);
    }

    /**
     * Setter for <code>thread.user</code>.
     */
    public void setUser(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>thread.user</code>.
     */
    public String getUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>thread.environment</code>. 环境信息
     */
    public void setEnvironment(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>thread.environment</code>. 环境信息
     */
    public String getEnvironment() {
        return (String) get(4);
    }

    /**
     * Setter for <code>thread.metadata</code>.
     */
    public void setMetadata(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>thread.metadata</code>.
     */
    public String getMetadata() {
        return (String) get(5);
    }

    /**
     * Setter for <code>thread.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>thread.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>thread.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>thread.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Thread.THREAD.ID;
    }

    @Override
    public Field<String> field2() {
        return Thread.THREAD.OBJECT;
    }

    @Override
    public Field<String> field3() {
        return Thread.THREAD.OWNER;
    }

    @Override
    public Field<String> field4() {
        return Thread.THREAD.USER;
    }

    @Override
    public Field<String> field5() {
        return Thread.THREAD.ENVIRONMENT;
    }

    @Override
    public Field<String> field6() {
        return Thread.THREAD.METADATA;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Thread.THREAD.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Thread.THREAD.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getObject();
    }

    @Override
    public String component3() {
        return getOwner();
    }

    @Override
    public String component4() {
        return getUser();
    }

    @Override
    public String component5() {
        return getEnvironment();
    }

    @Override
    public String component6() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getObject();
    }

    @Override
    public String value3() {
        return getOwner();
    }

    @Override
    public String value4() {
        return getUser();
    }

    @Override
    public String value5() {
        return getEnvironment();
    }

    @Override
    public String value6() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public ThreadRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ThreadRecord value2(String value) {
        setObject(value);
        return this;
    }

    @Override
    public ThreadRecord value3(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public ThreadRecord value4(String value) {
        setUser(value);
        return this;
    }

    @Override
    public ThreadRecord value5(String value) {
        setEnvironment(value);
        return this;
    }

    @Override
    public ThreadRecord value6(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public ThreadRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ThreadRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ThreadRecord values(String value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ThreadRecord
     */
    public ThreadRecord() {
        super(Thread.THREAD);
    }

    /**
     * Create a detached, initialised ThreadRecord
     */
    public ThreadRecord(String id, String object, String owner, String user, String environment, String metadata, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Thread.THREAD);

        setId(id);
        setObject(object);
        setOwner(owner);
        setUser(user);
        setEnvironment(environment);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
