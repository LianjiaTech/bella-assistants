/*
 * This file is generated by jOOQ.
 */
package com.ke.assistant.db.generated.tables.records;


import com.ke.assistant.db.generated.tables.ResponseIdMapping;
import com.ke.assistant.db.repo.Timed;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResponseIdMappingRecord extends UpdatableRecordImpl<ResponseIdMappingRecord> implements Timed, Record8<String, String, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>response_id_mapping.response_id</code>. Response唯一标识符
     */
    public void setResponseId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>response_id_mapping.response_id</code>. Response唯一标识符
     */
    public String getResponseId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>response_id_mapping.thread_id</code>. 会话id
     */
    public void setThreadId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>response_id_mapping.thread_id</code>. 会话id
     */
    public String getThreadId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>response_id_mapping.run_id</code>. run_id
     */
    public void setRunId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>response_id_mapping.run_id</code>. run_id
     */
    public String getRunId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>response_id_mapping.previous_response_id</code>. 上次请求的responseid
     */
    public void setPreviousResponseId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>response_id_mapping.previous_response_id</code>. 上次请求的responseid
     */
    public String getPreviousResponseId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>response_id_mapping.user</code>. 用户id
     */
    public void setUser(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>response_id_mapping.user</code>. 用户id
     */
    public String getUser() {
        return (String) get(4);
    }

    /**
     * Setter for <code>response_id_mapping.status</code>. 状态：active 正常的 deleted 已删除
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>response_id_mapping.status</code>. 状态：active 正常的 deleted 已删除
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>response_id_mapping.created_at</code>. 创建时间
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>response_id_mapping.created_at</code>. 创建时间
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>response_id_mapping.updated_at</code>. 更新时间
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>response_id_mapping.updated_at</code>. 更新时间
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.RESPONSE_ID;
    }

    @Override
    public Field<String> field2() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.THREAD_ID;
    }

    @Override
    public Field<String> field3() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.RUN_ID;
    }

    @Override
    public Field<String> field4() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.PREVIOUS_RESPONSE_ID;
    }

    @Override
    public Field<String> field5() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.USER;
    }

    @Override
    public Field<String> field6() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.STATUS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return ResponseIdMapping.RESPONSE_ID_MAPPING.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getResponseId();
    }

    @Override
    public String component2() {
        return getThreadId();
    }

    @Override
    public String component3() {
        return getRunId();
    }

    @Override
    public String component4() {
        return getPreviousResponseId();
    }

    @Override
    public String component5() {
        return getUser();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getResponseId();
    }

    @Override
    public String value2() {
        return getThreadId();
    }

    @Override
    public String value3() {
        return getRunId();
    }

    @Override
    public String value4() {
        return getPreviousResponseId();
    }

    @Override
    public String value5() {
        return getUser();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public ResponseIdMappingRecord value1(String value) {
        setResponseId(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value2(String value) {
        setThreadId(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value3(String value) {
        setRunId(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value4(String value) {
        setPreviousResponseId(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value5(String value) {
        setUser(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ResponseIdMappingRecord values(String value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResponseIdMappingRecord
     */
    public ResponseIdMappingRecord() {
        super(ResponseIdMapping.RESPONSE_ID_MAPPING);
    }

    /**
     * Create a detached, initialised ResponseIdMappingRecord
     */
    public ResponseIdMappingRecord(String responseId, String threadId, String runId, String previousResponseId, String user, String status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(ResponseIdMapping.RESPONSE_ID_MAPPING);

        setResponseId(responseId);
        setThreadId(threadId);
        setRunId(runId);
        setPreviousResponseId(previousResponseId);
        setUser(user);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
