/*
 * This file is generated by jOOQ.
 */
package com.ke.assistant.db.generated;


import com.ke.assistant.db.generated.tables.Assistant;
import com.ke.assistant.db.generated.tables.AssistantFileRelation;
import com.ke.assistant.db.generated.tables.AssistantTool;
import com.ke.assistant.db.generated.tables.IdSequence;
import com.ke.assistant.db.generated.tables.Message;
import com.ke.assistant.db.generated.tables.ResponseIdMapping;
import com.ke.assistant.db.generated.tables.Run;
import com.ke.assistant.db.generated.tables.RunStep;
import com.ke.assistant.db.generated.tables.RunTool;
import com.ke.assistant.db.generated.tables.Thread;
import com.ke.assistant.db.generated.tables.ThreadFileRelation;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * assistant基础信息表
     */
    public final Assistant ASSISTANT = Assistant.ASSISTANT;

    /**
     * The table <code>assistant_file_relation</code>.
     */
    public final AssistantFileRelation ASSISTANT_FILE_RELATION = AssistantFileRelation.ASSISTANT_FILE_RELATION;

    /**
     * The table <code>assistant_tool</code>.
     */
    public final AssistantTool ASSISTANT_TOOL = AssistantTool.ASSISTANT_TOOL;

    /**
     * ID序列生成表
     */
    public final IdSequence ID_SEQUENCE = IdSequence.ID_SEQUENCE;

    /**
     * The table <code>message</code>.
     */
    public final Message MESSAGE = Message.MESSAGE;

    /**
     * The table <code>response_id_mapping</code>.
     */
    public final ResponseIdMapping RESPONSE_ID_MAPPING = ResponseIdMapping.RESPONSE_ID_MAPPING;

    /**
     * The table <code>run</code>.
     */
    public final Run RUN = Run.RUN;

    /**
     * The table <code>run_step</code>.
     */
    public final RunStep RUN_STEP = RunStep.RUN_STEP;

    /**
     * The table <code>run_tool</code>.
     */
    public final RunTool RUN_TOOL = RunTool.RUN_TOOL;

    /**
     * The table <code>thread</code>.
     */
    public final Thread THREAD = Thread.THREAD;

    /**
     * The table <code>thread_file_relation</code>.
     */
    public final ThreadFileRelation THREAD_FILE_RELATION = ThreadFileRelation.THREAD_FILE_RELATION;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Assistant.ASSISTANT,
            AssistantFileRelation.ASSISTANT_FILE_RELATION,
            AssistantTool.ASSISTANT_TOOL,
            IdSequence.ID_SEQUENCE,
            Message.MESSAGE,
            ResponseIdMapping.RESPONSE_ID_MAPPING,
            Run.RUN,
            RunStep.RUN_STEP,
            RunTool.RUN_TOOL,
            Thread.THREAD,
            ThreadFileRelation.THREAD_FILE_RELATION);
    }
}
